/**
 * –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –≤–∫–ª–∞–¥–æ–∫
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
 */
export class TabManager {
    constructor() {
        this.currentTab = 'about';
        this.tabs = ['about', '2d', '3d', 'advanced'];
        this.tabStates = {};
        this.isInitialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–∫–ª–∞–¥–æ–∫
     */
    async init() {
        try {
            console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–∫–ª–∞–¥–æ–∫...');
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            this.loadTabState();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
            this.setupEventListeners();
            
            // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
            this.switchTab(this.currentTab);
            
            this.isInitialized = true;
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≤–∫–ª–∞–¥–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –≤–∫–ª–∞–¥–æ–∫:', error);
            throw error;
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
     */
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
        this.tabs.forEach(tabId => {
            const tabButton = document.getElementById(`tab-${tabId}`);
            if (tabButton) {
                tabButton.addEventListener('click', () => {
                    this.switchTab(tabId);
                });
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞
        const exportButtons = [
            'export2dBtn', 'exportRadarBtn', 'exportPolarBtn', 
            'exportHeatmapBtn', 'exportTreeBtn'
        ];

        exportButtons.forEach(btnId => {
            const btn = document.getElementById(btnId);
            if (btn) {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.handleExport(btnId);
                });
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–ª–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
        const fullscreenBtn = document.getElementById('fullscreen2dBtn');
        if (fullscreenBtn) {
            fullscreenBtn.addEventListener('click', (e) => {
                e.preventDefault();
                this.toggleFullscreen('chart2d');
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', () => {
            this.handleResize();
        });
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
     */
    switchTab(tabId) {
        if (!this.tabs.includes(tabId)) {
            console.warn(`–í–∫–ª–∞–¥–∫–∞ ${tabId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
            return;
        }

        console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabId}`);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        this.currentTab = tabId;

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
        this.updateTabButtons(tabId);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π –≤–∫–ª–∞–¥–æ–∫
        this.updateTabPanels(tabId);

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        this.saveTabState();

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
        this.notifyTabChange(tabId);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        this.animateTabTransition(tabId);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
     * @param {string} activeTabId - ID –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     */
    updateTabButtons(activeTabId) {
        this.tabs.forEach(tabId => {
            const tabButton = document.getElementById(`tab-${tabId}`);
            if (tabButton) {
                if (tabId === activeTabId) {
                    tabButton.classList.add('active');
                } else {
                    tabButton.classList.remove('active');
                }
            }
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π –≤–∫–ª–∞–¥–æ–∫
     * @param {string} activeTabId - ID –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     */
    updateTabPanels(activeTabId) {
        this.tabs.forEach(tabId => {
            const tabPanel = document.getElementById(`tab-content-${tabId}`);
            if (tabPanel) {
                if (tabId === activeTabId) {
                    // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                    tabPanel.style.display = 'block';
                    setTimeout(() => {
                        tabPanel.classList.add('active');
                    }, 10);
                } else {
                    // –ü–ª–∞–≤–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
                    tabPanel.classList.remove('active');
                    setTimeout(() => {
                        if (!tabPanel.classList.contains('active')) {
                            tabPanel.style.display = 'none';
                        }
                    }, 300);
                }
            }
        });
    }

    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     */
    animateTabTransition(tabId) {
        const tabPanel = document.getElementById(`tab-content-${tabId}`);
        if (tabPanel) {
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
            tabPanel.classList.add('fade-in');
            
            // –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            setTimeout(() => {
                tabPanel.classList.remove('fade-in');
            }, 500);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
     * @param {string} buttonId - ID –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
     */
    handleExport(buttonId) {
        const chartMap = {
            'export2dBtn': 'chart2d',
            'exportRadarBtn': 'radarChart',
            'exportPolarBtn': 'polarChart',
            'exportHeatmapBtn': 'heatmapChart',
            'exportTreeBtn': 'treeChart'
        };

        const chartId = chartMap[buttonId];
        if (chartId) {
            this.exportChart(chartId);
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–∞ –≤ PNG
     * @param {string} chartId - ID canvas –≥—Ä–∞—Ñ–∏–∫–∞
     */
    exportChart(chartId) {
        try {
            const canvas = document.getElementById(chartId);
            if (canvas) {
                // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                const link = document.createElement('a');
                link.download = `${chartId}_${new Date().toISOString().slice(0, 10)}.png`;
                link.href = canvas.toDataURL('image/png');
                link.click();
                
                console.log(`üìä –≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–∞: ${chartId}`);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≥—Ä–∞—Ñ–∏–∫–∞:', error);
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
     * @param {string} elementId - ID —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
     */
    toggleFullscreen(elementId) {
        const element = document.getElementById(elementId);
        if (element) {
            if (!document.fullscreenElement) {
                element.requestFullscreen().catch(err => {
                    console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º:', err);
                });
            } else {
                document.exitFullscreen();
            }
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
     */
    handleResize() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        this.tabs.forEach(tabId => {
            const tabPanel = document.getElementById(`tab-content-${tabId}`);
            if (tabPanel && tabPanel.classList.contains('active')) {
                // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
                this.notifyResize(tabId);
            }
        });
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ –≤ localStorage
     */
    saveTabState() {
        try {
            const state = {
                currentTab: this.currentTab,
                tabStates: this.tabStates,
                timestamp: Date.now()
            };
            localStorage.setItem('tabManagerState', JSON.stringify(state));
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫:', error);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ –∏–∑ localStorage
     */
    loadTabState() {
        try {
            const savedState = localStorage.getItem('tabManagerState');
            if (savedState) {
                const state = JSON.parse(savedState);
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
                const isRecent = (Date.now() - state.timestamp) < 24 * 60 * 60 * 1000;
                
                if (isRecent && this.tabs.includes(state.currentTab)) {
                    this.currentTab = state.currentTab;
                    this.tabStates = state.tabStates || {};
                }
            }
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫:', error);
        }
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     */
    notifyTabChange(tabId) {
        // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        const event = new CustomEvent('tabChanged', {
            detail: { tabId, previousTab: this.currentTab }
        });
        document.dispatchEvent(event);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     */
    notifyResize(tabId) {
        const event = new CustomEvent('tabResize', {
            detail: { tabId }
        });
        document.dispatchEvent(event);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     * @returns {string} ID –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     */
    getCurrentTab() {
        return this.currentTab;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     * @returns {boolean} –ê–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≤–∫–ª–∞–¥–∫–∞
     */
    isTabActive(tabId) {
        return this.currentTab === tabId;
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     * @param {object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
     */
    saveTabStateData(tabId, state) {
        this.tabStates[tabId] = {
            ...this.tabStates[tabId],
            ...state,
            lastUpdated: Date.now()
        };
        this.saveTabState();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     * @param {string} tabId - ID –≤–∫–ª–∞–¥–∫–∏
     * @returns {object} –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     */
    getTabStateData(tabId) {
        return this.tabStates[tabId] || {};
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
     */
    clearTabState() {
        this.tabStates = {};
        localStorage.removeItem('tabManagerState');
    }
} 